import Foundation

(0 * 1000) + (4 * 100) + (2 * 10) + (3 * 1)
423

//================================================================
(1 * 8) + (1 * 4) + (0 * 2) + (1 * 1)
13

//================================================================
(1 * 256) + (1 * 128) + (0 * 64) + (1 * 32) + (0 * 16) + (0 * 8) + (1 * 4) + (1 * 2) + (1 * 1)
423

//================================================================
(12 * 4096) + (0 * 256) + (13 * 16) + (14 * 1)
49374

//================================================================
//c = 1100
//0 = 0000
//d = 1101
//e = 1110
//
//c0de = 1100 0000 1101 1110

//================================================================
//Step 1. Load photo from the hard drive.
//Step 2. Resize photo to 400 pixels wide by 300 pixels high.
//Step 3. Apply sepia filter to photo.
//Step 4. Print photo.

//================================================================
// This is a comment. It is not executed.

//================================================================
// This is also a comment.
// Over multiple lines.

//================================================================
/* This is also a comment.
   Over many..
   many...
   many lines. */

//================================================================
/* This is a comment.

 /* And inside it
 is
 another comment.
 */

 Back to the first.
 */

//================================================================
print("Hello, Swift Apprentice reader!")

//================================================================
2 + 6
10 - 2
2 * 4
24 / 3

//================================================================
2+6

//================================================================
2+6   // OK
2 + 6 // OK
//2 +6  // ERROR
//2+ 6  // ERROR

//================================================================
22 / 7

//================================================================
22.0 / 7.0

//================================================================
28 % 10

//================================================================
(28.0).truncatingRemainder(dividingBy: 10.0)

//================================================================
1 << 3

32 >> 2

//================================================================
((8000 / (5 * 10)) - 32) >> (29 % 5)

//================================================================
350 / 5 + 2

//================================================================
350 / (5 + 2)

//================================================================
sin(45 * Double.pi / 180)
// 0.7071067811865475

cos(135 * Double.pi / 180)
// -0.7071067811865475

//================================================================
(2.0).squareRoot()
// 1.414213562373095

//================================================================
max(5, 10)
// 10

min(-5, -10)
// -10

//================================================================
max((2.0).squareRoot(), Double.pi / 2)
// 1.570796326794897

//================================================================
let number: Int = 10

//================================================================
let pi: Double = 3.14159

//================================================================
//number = 0

//================================================================
var variableNumber: Int = 42

//================================================================
variableNumber = 0
variableNumber = 1_000_000

//================================================================
var üê∂üí©: Int = -1

//================================================================
var counter: Int = 0

counter += 1
// counter = 1

counter -= 1
// counter = 0

//================================================================
//var counter: Int = 0
//counter = counter + 1
//counter = counter - 1

//================================================================
counter = 10

counter *= 3  // same as counter = counter * 3
// counter = 30

counter /= 2  // same as counter = counter / 2
// counter = 15

//================================================================
var age: Int = 16
print(age)
age = 30
print(age)

//================================================================
let x: Int = 46
let y: Int = 10

//================================================================
// 1
let answer1: Int = (x * 100) + y
// 2
let answer2: Int = (x * 100) + (y * 100)
// 3
let answer3: Int = (x * 100) + (y / 10)

//================================================================
8 - 4 * 2 + 6 / 3 * 4

//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


