import Foundation

//================================================================
struct Car {
  let make: String
  let color: String
}

//================================================================
struct Contact {
  var fullName: String
  var emailAddress: String
}

//================================================================
var person = Contact(fullName: "Grace Murray",
                     emailAddress: "grace@navy.mil")

//================================================================
person.fullName // Grace Murray
person.emailAddress // grace@navy.mil

//================================================================
person.fullName = "Grace Hopper"
person.fullName // Grace Hopper

//================================================================
struct ContactB {
  var fullName: String
  let emailAddress: String
}
var personB = ContactB(fullName: "Grace Murray",
                     emailAddress: "grace@navy.mil")

// Error: cannot assign to a constant
//personB.emailAddress = "grace@gmail.com"

//================================================================
struct ContactC {
  var fullName: String
  let emailAddress: String
  var relationship = "Friend"
}

//================================================================
var personC = ContactC(fullName: "Grace Murray",
                     emailAddress: "grace@navy.mil")
personC.relationship // Friend

var bossC = ContactC(fullName: "Ray Wenderlich",
                   emailAddress: "ray@kodeco.com",
                   relationship: "Boss")

//================================================================
struct TV {
  var height: Double
  var width: Double

  // 1
  var diagonal: Int {
    // 2
    let result = (height * height +
      width * width).squareRoot().rounded()
    // 3
    return Int(result)
  }
}

//================================================================
var tv = TV(height: 53.93, width: 95.87)
tv.diagonal // 110

//================================================================
tv.width = tv.height * 1.25
tv.diagonal // 76

//================================================================
struct TVb {
  var height: Double
  var width: Double
  
  var diagonal: Int {
    // 1
    get {
      // 2
      let result = (height * height + width * width).squareRoot().rounded()
      return Int(result)
    }
    set {
      // 3
      let ratioWidth = 16.0
      let ratioHeight = 9.0
      // 4
      let ratioDiagonal = (ratioWidth * ratioWidth + ratioHeight * ratioHeight).squareRoot()
      height = Double(newValue) * ratioHeight / ratioDiagonal
      width = height * ratioWidth / ratioHeight
    }
  }
}
var tvB = TVb(height: 53.93, width: 95.87)
tv.diagonal // 110
//================================================================
tvB.diagonal = 70
tvB.height // 34.32...
tvB.width // 61.01...

//================================================================
struct Level {
  let id: Int
  var boss: String
  var unlocked: Bool
}

let level1 = Level(id: 1, boss: "Chameleon", unlocked: true)
let level2 = Level(id: 2, boss: "Squid", unlocked: false)
let level3 = Level(id: 3, boss: "Chupacabra", unlocked: false)
let level4 = Level(id: 4, boss: "Yeti", unlocked: false)

//================================================================
struct LevelB {
  @MainActor static var highestLevel = 1
  let id: Int
  var boss: String
  var unlocked: Bool
}

let level1B = LevelB(id: 1, boss: "Chameleon", unlocked: true)
let level2B = LevelB(id: 2, boss: "Squid", unlocked: false)
let level3B = LevelB(id: 3, boss: "Chupacabra", unlocked: false)
let level4B = LevelB(id: 4, boss: "Yeti", unlocked: false)

//================================================================
// Error: you canâ€™t access a type property on an instance
//let highestLevel = level3B.highestLevel

//================================================================
LevelB.highestLevel // 1

//================================================================
struct LevelC {
  nonisolated(unsafe) static var highestLevel = 1
  let id: Int
  var boss: String
  var unlocked: Bool {
    didSet {
      if unlocked && id > Self.highestLevel {
        Self.highestLevel = id
      }
    }
  }
}



//================================================================
struct LightBulb {
  static let maxCurrent = 40
  var current = 0 {
    didSet {
      if current > LightBulb.maxCurrent {
        print("""
              Current is too high,
              falling back to previous setting.
              """)
        current = oldValue
      }
    }
  }
}

//================================================================
var light = LightBulb()
light.current = 50
light.current // 0
light.current = 40
light.current // 40

//================================================================
struct Circle {
  lazy var pi = {
    ((4.0 * atan(1.0 / 5.0)) - atan(1.0 / 239.0)) * 4.0
  }()
  var radius = 0.0
  var circumference: Double {
    mutating get {
      pi * radius * 2
    }
  }
  init(radius: Double) {
    self.radius = radius
  }
}

//================================================================
var circle = Circle(radius: 5) // got a circle, pi has not been run

//================================================================
circle.circumference // 31.42
// also, pi now has a value


//================================================================
struct FuelTank {
  var level: Double // decimal percentage between 0 and 1
}

// Mini-Exercises ================================================================
struct CircleB {
  var radius = 0.0
  var circumference: Double {
    mutating get {
      Double.pi * radius * 2
    }
  }
}

var circleB = CircleB(radius: 5) // got a circle, pi has not been run

circleB.circumference // 31.42







// Challenge 1: Ice Cream ================================================================
//Rewrite the IceCream structure below to use default values and lazy initialization:
//struct IceCream {
//  let name: String
//  let ingredients: [String]
//}
//Use default values for the properties.
//Lazily initialize the ingredients array.

struct IceCreamChallenge1 {
  let name = "Vanilla"
  lazy var ingredients = {
    ["Wafer"]
  }()
}

var iceCream = IceCreamChallenge1() // got a circle, pi has not been run
iceCream.name
iceCream.ingredients
iceCream
// Challenge 2: Car and Fuel Tank ================================================================
//At the beginning of the chapter, you saw a Car structure. Dive into the inner workings of the car and rewrite the FuelTank structure below with property observer functionality:
//struct FuelTank {
//  var level: Double // decimal percentage between 0 and 1
//}
//A.Add a lowFuel Boolean stored property to the structure.
//B.Flip the lowFuel Boolean when the level drops below 10%.
//C.Ensure that when the tank fills back up, the lowFuel warning will turn off.
//D.Set the level to a minimum of 0 or a maximum of 1 if it gets set above or below the expected values.
//E.Add a FuelTank property to Car.
struct FuelTankChallenge2 {
  var lowFuel = false
  var level = 1.0 { // decimal percentage between 0 and 1
    didSet {
      if level < 0.1 {
        lowFuel = true
      }
      if level < 0 {
        level = 0
      }
      if level > 1 {
        level = 1
      }
    }
  }
}
var fuelTank = FuelTankChallenge2(level: 1)
fuelTank.level = 0.09
fuelTank.level = -0.09
fuelTank.level = 2.3







//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


//================================================================


