import Foundation

//================================================================
let months = ["January", "February", "March", "April", "May",
              "June", "July", "August", "September", "October",
              "November", "December"]

func semester(for month: String) -> String {
  switch month {
  case "August", "September", "October", "November", "December":
    return "Autumn"
  case "January", "February", "March", "April", "May":
    return "Spring"
  default:
    return "Not in the school year"
  }
}

semester(for: "April") // Spring

//================================================================
enum MonthB {
  case january
  case february
  case march
  case april
  case may
  case june
  case july
  case august
  case september
  case october
  case november
  case december
}

//================================================================
enum Month {
  case january, february, march, april, may, june, july, august,
  september, october, november, december
}

//================================================================
func semesterB(for month: Month) -> String {
  switch month {
  case Month.august, Month.september, Month.october,
       Month.november, Month.december:
    return "Autumn"
  case Month.january, Month.february, Month.march,
       Month.april, Month.may:
    return "Spring"
  default:
    return "Not in the school year"
  }
}

//================================================================
func semesterC(for month: Month) -> String {
  switch month {
  case .august, .september, .october, .november, .december:
    return "Autumn"
  case .january, .february, .march, .april, .may:
    return "Spring"
  default:
    return "Not in the school year"
  }
}

//================================================================
func semester(for month: Month) -> String {
  switch month {
  case .august, .september, .october, .november, .december:
    return "Autumn"
  case .january, .february, .march, .april, .may:
    return "Spring"
  case .june, .july:
    return "Not in the school year"
  }
}

//================================================================
var month = Month.april
semester(for: month) // "Spring"

month = .september
semester(for: month) // "Autumn"

//================================================================
//let semester = month.semester // "Autumn"

//================================================================
//enum Month: Int {

//================================================================
enum MonthIntB: Int {
  case january = 1, february = 2, march = 3, april = 4, may = 5,
  june = 6, july = 7, august = 8, september = 9,
  october = 10, november = 11, december = 12
}

//================================================================
enum MonthInt: Int {
  case january = 1, february, march, april, may, june, july,
  august, september, october, november, december
}

//================================================================
func monthsUntilWinterBreak(from month: MonthInt) -> Int {
  MonthInt.december.rawValue - month.rawValue
}
monthsUntilWinterBreak(from: .april) // 8

//================================================================
//let fifthMonth = MonthInt(rawValue: 5)
//monthsUntilWinterBreak(from: fifthMonth) // Error: not unwrapped

//================================================================
let fifthMonth = MonthInt(rawValue: 5)! // may
monthsUntilWinterBreak(from: fifthMonth) // 7

//================================================================
//let monthsLeft = fifthMonth.monthsUntilWinterBreak // 7

//================================================================
// 1
enum Icon: String {
  case music
  case sports
  case weather

  var filename: String {
    // 2
    "\(rawValue).png"
  }
}
let icon = Icon.weather
icon.filename // weather.png

//================================================================
enum Coin: Int {
  case penny = 1
  case nickel = 5
  case dime = 10
  case quarter = 25
}

//================================================================
let coin = Coin.quarter
coin.rawValue // 25

let aSmallCoin = Coin.dime
coin.rawValue > aSmallCoin.rawValue   //true

aSmallCoin.rawValue + coin.rawValue   //35

//================================================================
var balance = 100

//@MainActor func withdraw(amount: Int) {
//  balance -= amount
//}

//================================================================
enum WithdrawalResult {
  case success(newBalance: Int)
  case error(message: String)
}

//================================================================
@MainActor func withdraw(amount: Int) -> WithdrawalResult {
  if amount <= balance {
    balance -= amount
    return .success(newBalance: balance)
  } else {
    return .error(message: "Not enough money!")
  }
}

//================================================================
let result = withdraw(amount: 99)

switch result {
case .success(let newBalance):
  print("Your new balance is: \(newBalance)")
case .error(let message):
  print(message)
}

////================================================================
enum HTTPMethod {
  case get
  case post(body: String)
}

//================================================================
let request = HTTPMethod.post(body: "Hi there")
guard case .post(let body) = request else {
  fatalError("No message was posted")
}
print(body)

//================================================================
enum TrafficLight {
  case red, yellow, green
}
let trafficLight = TrafficLight.red

//================================================================
enum Pet: CaseIterable {
  case cat, dog, bird, turtle, fish, hamster
}

for pet in Pet.allCases {
  print(pet)
}

////================================================================
//cat
//dog
//bird
//turtle
//fish
//hamster
//
//================================================================
struct MathB {
  static func factorial(of number: Int) -> Int {
    (1...number).reduce(1, *)
  }
}
let factorialB = Math.factorial(of: 6) // 720

//================================================================
let math = MathB()

//================================================================
enum Math {
  static func factorial(of number: Int) -> Int {
    (1...number).reduce(1, *)
  }
}
let factorial = Math.factorial(of: 6) // 720

//================================================================
//let nestEgg = 25000 * pow(Math.e, 0.07 * 20) // $101,380.95

////================================================================
//var age: Int?
//age = 17
//age = nil
//
////================================================================
//switch age {
//case .none:
//  print("No value")
//case .some(let value):
//  print("Got a value: \(value)")
//}
//
////================================================================
//let optionalNil: Int? = .none
//optionalNil == nil    // true
//optionalNil == .none  // true
//
////================================================================
//enum Coin: Int {
//  case penny = 1
//  case nickel = 5
//  case dime = 10
//  case quarter = 25
//}
//
//let coinPurse: [Coin] = [.penny, .quarter, .nickel, .dime, .penny, .dime, .quarter]
//
////================================================================
//enum Month: Int {
//  case january = 1, february, march, april, may, june, july,
//       august, september, october, november, december
//}
//
////================================================================
//enum Direction {
//  case north
//  case south
//  case east
//  case west
//}
//
////================================================================
//let movements: [Direction] = [.north, .north, .west, .south,
//  .west, .south, .south, .east, .east, .south, .east]
//
////================================================================
//var location = (x: 0, y: 0)
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
////================================================================
//
//
